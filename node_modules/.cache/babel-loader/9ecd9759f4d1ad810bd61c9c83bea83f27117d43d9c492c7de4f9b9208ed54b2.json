{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sneha\\\\Downloads\\\\LUDO\\\\frontend\\\\src\\\\components\\\\DynamicDashboard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useTestContext } from '../context/TestContext';\nimport AIAnalysis from './AIAnalysis';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, BarChart, Bar } from 'recharts';\nimport { Activity, Brain, Zap, BarChart3, History, Settings, AlertTriangle, CheckCircle, Users, Clock, TrendingUp } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DynamicDashboard = () => {\n  _s();\n  var _realTimeData$success;\n  const {\n    currentTest,\n    testResults,\n    realTimeData,\n    isTestRunning,\n    testHistory,\n    testData\n  } = useTestContext();\n\n  // Generate dynamic response time distribution data\n  const getResponseTimeDistribution = () => {\n    const data = isTestRunning ? realTimeData : testResults;\n    const avgResponseTime = data.avgResponseTime || 0;\n\n    // Generate realistic distribution based on current response time\n    const totalRequests = data.totalRequests || 1000;\n    const successRate = data.successRate || data.successfulRequests / data.totalRequests * 100 || 95;\n\n    // Adjust distribution based on performance\n    let distribution;\n    if (avgResponseTime < 200) {\n      // Good performance - most requests in lower ranges\n      distribution = [{\n        range: '0-100ms',\n        count: Math.floor(totalRequests * 0.4)\n      }, {\n        range: '100-200ms',\n        count: Math.floor(totalRequests * 0.35)\n      }, {\n        range: '200-300ms',\n        count: Math.floor(totalRequests * 0.15)\n      }, {\n        range: '300-400ms',\n        count: Math.floor(totalRequests * 0.07)\n      }, {\n        range: '400-500ms',\n        count: Math.floor(totalRequests * 0.02)\n      }, {\n        range: '500ms+',\n        count: Math.floor(totalRequests * 0.01)\n      }];\n    } else if (avgResponseTime < 500) {\n      // Moderate performance\n      distribution = [{\n        range: '0-100ms',\n        count: Math.floor(totalRequests * 0.2)\n      }, {\n        range: '100-200ms',\n        count: Math.floor(totalRequests * 0.3)\n      }, {\n        range: '200-300ms',\n        count: Math.floor(totalRequests * 0.25)\n      }, {\n        range: '300-400ms',\n        count: Math.floor(totalRequests * 0.15)\n      }, {\n        range: '400-500ms',\n        count: Math.floor(totalRequests * 0.07)\n      }, {\n        range: '500ms+',\n        count: Math.floor(totalRequests * 0.03)\n      }];\n    } else {\n      // Poor performance - more requests in higher ranges\n      distribution = [{\n        range: '0-100ms',\n        count: Math.floor(totalRequests * 0.05)\n      }, {\n        range: '100-200ms',\n        count: Math.floor(totalRequests * 0.15)\n      }, {\n        range: '200-300ms',\n        count: Math.floor(totalRequests * 0.25)\n      }, {\n        range: '300-400ms',\n        count: Math.floor(totalRequests * 0.25)\n      }, {\n        range: '400-500ms',\n        count: Math.floor(totalRequests * 0.2)\n      }, {\n        range: '500ms+',\n        count: Math.floor(totalRequests * 0.1)\n      }];\n    }\n    return distribution;\n  };\n\n  // Generate dynamic requests over time data\n  const getRequestsOverTime = () => {\n    if (isTestRunning && testData.labels.length > 0) {\n      return testData.labels.map((label, index) => ({\n        time: label,\n        requests: testData.requestsPerSecond[index] || Math.floor(Math.random() * 50) + 10\n      }));\n    }\n\n    // Generate realistic data based on test type\n    const testType = (currentTest === null || currentTest === void 0 ? void 0 : currentTest.type) || 'load';\n    const baseRPS = testType === 'stress' ? 80 : testType === 'spike' ? 120 : 60;\n    return Array.from({\n      length: 12\n    }, (_, i) => ({\n      time: `${i * 5}s`,\n      requests: Math.floor(Math.random() * baseRPS) + baseRPS * 0.5\n    }));\n  };\n\n  // Get current test data\n  const getCurrentTestData = () => {\n    if (isTestRunning && realTimeData) {\n      return {\n        totalRequests: realTimeData.totalRequests || 0,\n        successfulRequests: Math.floor(realTimeData.successRate / 100 * (realTimeData.totalRequests || 1000)),\n        failedRequests: Math.floor((100 - realTimeData.successRate) / 100 * (realTimeData.totalRequests || 1000)),\n        avgResponseTime: realTimeData.avgResponseTime || 0,\n        percentile95: realTimeData.avgResponseTime * 1.5 || 0,\n        peakRPS: realTimeData.requestsPerSecond || 0\n      };\n    }\n    if (testResults && Object.keys(testResults).length > 0) {\n      return testResults;\n    }\n\n    // Default data\n    return {\n      totalRequests: 1000,\n      successfulRequests: 920,\n      failedRequests: 80,\n      avgResponseTime: 392,\n      percentile95: 566,\n      peakRPS: 57\n    };\n  };\n  const currentData = getCurrentTestData();\n  const responseTimeData = getResponseTimeDistribution();\n  const requestsOverTimeData = getRequestsOverTime();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 lg:grid-cols-3 gap-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 min-w-0\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card h-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Activity, {\n            className: \"h-6 w-6 text-green-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-white\",\n            children: \"Current Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: isTestRunning && currentTest ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-300\",\n                children: \"Test Type:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-white font-semibold\",\n                children: [currentTest.type.charAt(0).toUpperCase() + currentTest.type.slice(1), \" Test\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-300\",\n                children: \"Active Users:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-white font-semibold\",\n                children: realTimeData.activeUsers || currentTest.userCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-300\",\n                children: \"Success Rate:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-white font-semibold\",\n                children: [((_realTimeData$success = realTimeData.successRate) === null || _realTimeData$success === void 0 ? void 0 : _realTimeData$success.toFixed(1)) || 0, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-300\",\n                children: \"Response Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-white font-semibold\",\n                children: [realTimeData.avgResponseTime || 0, \"ms\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-300\",\n                children: \"RPS:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-white font-semibold\",\n                children: realTimeData.requestsPerSecond || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-300\",\n                children: \"Progress:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-white font-semibold\",\n                children: [Math.round(realTimeData.testProgress || 0), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center py-8\",\n            children: [/*#__PURE__*/_jsxDEV(Clock, {\n              className: \"h-12 w-12 text-gray-400 mx-auto mb-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-400\",\n              children: \"No test running\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500\",\n              children: \"Start a test to see live metrics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 min-w-0\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card h-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Zap, {\n            className: \"h-6 w-6 text-yellow-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-white\",\n            children: \"Test Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-md font-semibold text-white\",\n            children: \"Test Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-300\",\n                children: \"Total Requests:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-white font-semibold\",\n                children: currentData.totalRequests.toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-300\",\n                children: \"Successful Requests:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-white font-semibold\",\n                children: currentData.successfulRequests.toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-300\",\n                children: \"Failed Requests:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-white font-semibold\",\n                children: currentData.failedRequests.toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-300\",\n                children: \"Average Response Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-white font-semibold\",\n                children: [currentData.avgResponseTime, \"ms\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-300\",\n                children: \"95th Percentile:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-white font-semibold\",\n                children: [currentData.percentile95, \"ms\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-300\",\n                children: \"Peak RPS:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-white font-semibold\",\n                children: currentData.peakRPS\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"text-sm font-semibold text-white mb-2\",\n              children: \"Response Time Distribution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h-32\",\n              children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(BarChart, {\n                  data: responseTimeData,\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\",\n                    stroke: \"#374151\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    dataKey: \"range\",\n                    stroke: \"#9CA3AF\",\n                    fontSize: 10\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                    stroke: \"#9CA3AF\",\n                    fontSize: 10\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    contentStyle: {\n                      backgroundColor: '#1F2937',\n                      border: '1px solid #374151',\n                      borderRadius: '8px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                    dataKey: \"count\",\n                    fill: \"#10B981\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"text-sm font-semibold text-white mb-2\",\n              children: \"Requests Over Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h-32\",\n              children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(LineChart, {\n                  data: requestsOverTimeData,\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\",\n                    stroke: \"#374151\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    dataKey: \"time\",\n                    stroke: \"#9CA3AF\",\n                    fontSize: 10\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                    stroke: \"#9CA3AF\",\n                    fontSize: 10\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    contentStyle: {\n                      backgroundColor: '#1F2937',\n                      border: '1px solid #374151',\n                      borderRadius: '8px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Line, {\n                    type: \"monotone\",\n                    dataKey: \"requests\",\n                    stroke: \"#EF4444\",\n                    strokeWidth: 2\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 min-w-0\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card h-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Brain, {\n            className: \"h-6 w-6 text-purple-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-white\",\n            children: \"AI Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: isTestRunning || testResults && Object.keys(testResults).length > 0 ? /*#__PURE__*/_jsxDEV(AIAnalysis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center py-8\",\n            children: [/*#__PURE__*/_jsxDEV(Brain, {\n              className: \"h-12 w-12 text-gray-400 mx-auto mb-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-400\",\n              children: \"No test data available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500\",\n              children: \"Run a test to get AI analysis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(DynamicDashboard, \"00AMtcQKnhPKDUm5R6iws45ud4o=\", false, function () {\n  return [useTestContext];\n});\n_c = DynamicDashboard;\nexport default DynamicDashboard;\nvar _c;\n$RefreshReg$(_c, \"DynamicDashboard\");","map":{"version":3,"names":["React","useTestContext","AIAnalysis","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","BarChart","Bar","Activity","Brain","Zap","BarChart3","History","Settings","AlertTriangle","CheckCircle","Users","Clock","TrendingUp","jsxDEV","_jsxDEV","Fragment","_Fragment","DynamicDashboard","_s","_realTimeData$success","currentTest","testResults","realTimeData","isTestRunning","testHistory","testData","getResponseTimeDistribution","data","avgResponseTime","totalRequests","successRate","successfulRequests","distribution","range","count","Math","floor","getRequestsOverTime","labels","length","map","label","index","time","requests","requestsPerSecond","random","testType","type","baseRPS","Array","from","_","i","getCurrentTestData","failedRequests","percentile95","peakRPS","Object","keys","currentData","responseTimeData","requestsOverTimeData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","slice","activeUsers","userCount","toFixed","round","testProgress","toLocaleString","width","height","strokeDasharray","stroke","dataKey","fontSize","contentStyle","backgroundColor","border","borderRadius","fill","strokeWidth","_c","$RefreshReg$"],"sources":["C:/Users/Sneha/Downloads/LUDO/frontend/src/components/DynamicDashboard.js"],"sourcesContent":["import React from 'react';\r\nimport { useTestContext } from '../context/TestContext';\r\nimport AIAnalysis from './AIAnalysis';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, BarChart, Bar } from 'recharts';\r\nimport { \r\n  Activity, Brain, Zap, BarChart3, History, Settings, \r\n  AlertTriangle, CheckCircle, Users, Clock, TrendingUp\r\n} from 'lucide-react';\r\n\r\nconst DynamicDashboard = () => {\r\n  const { currentTest, testResults, realTimeData, isTestRunning, testHistory, testData } = useTestContext();\r\n\r\n  // Generate dynamic response time distribution data\r\n  const getResponseTimeDistribution = () => {\r\n    const data = isTestRunning ? realTimeData : testResults;\r\n    const avgResponseTime = data.avgResponseTime || 0;\r\n    \r\n    // Generate realistic distribution based on current response time\r\n    const totalRequests = data.totalRequests || 1000;\r\n    const successRate = data.successRate || ((data.successfulRequests / data.totalRequests) * 100) || 95;\r\n    \r\n    // Adjust distribution based on performance\r\n    let distribution;\r\n    if (avgResponseTime < 200) {\r\n      // Good performance - most requests in lower ranges\r\n      distribution = [\r\n        { range: '0-100ms', count: Math.floor(totalRequests * 0.4) },\r\n        { range: '100-200ms', count: Math.floor(totalRequests * 0.35) },\r\n        { range: '200-300ms', count: Math.floor(totalRequests * 0.15) },\r\n        { range: '300-400ms', count: Math.floor(totalRequests * 0.07) },\r\n        { range: '400-500ms', count: Math.floor(totalRequests * 0.02) },\r\n        { range: '500ms+', count: Math.floor(totalRequests * 0.01) }\r\n      ];\r\n    } else if (avgResponseTime < 500) {\r\n      // Moderate performance\r\n      distribution = [\r\n        { range: '0-100ms', count: Math.floor(totalRequests * 0.2) },\r\n        { range: '100-200ms', count: Math.floor(totalRequests * 0.3) },\r\n        { range: '200-300ms', count: Math.floor(totalRequests * 0.25) },\r\n        { range: '300-400ms', count: Math.floor(totalRequests * 0.15) },\r\n        { range: '400-500ms', count: Math.floor(totalRequests * 0.07) },\r\n        { range: '500ms+', count: Math.floor(totalRequests * 0.03) }\r\n      ];\r\n    } else {\r\n      // Poor performance - more requests in higher ranges\r\n      distribution = [\r\n        { range: '0-100ms', count: Math.floor(totalRequests * 0.05) },\r\n        { range: '100-200ms', count: Math.floor(totalRequests * 0.15) },\r\n        { range: '200-300ms', count: Math.floor(totalRequests * 0.25) },\r\n        { range: '300-400ms', count: Math.floor(totalRequests * 0.25) },\r\n        { range: '400-500ms', count: Math.floor(totalRequests * 0.2) },\r\n        { range: '500ms+', count: Math.floor(totalRequests * 0.1) }\r\n      ];\r\n    }\r\n    \r\n    return distribution;\r\n  };\r\n\r\n  // Generate dynamic requests over time data\r\n  const getRequestsOverTime = () => {\r\n    if (isTestRunning && testData.labels.length > 0) {\r\n      return testData.labels.map((label, index) => ({\r\n        time: label,\r\n        requests: testData.requestsPerSecond[index] || Math.floor(Math.random() * 50) + 10\r\n      }));\r\n    }\r\n    \r\n    // Generate realistic data based on test type\r\n    const testType = currentTest?.type || 'load';\r\n    const baseRPS = testType === 'stress' ? 80 : testType === 'spike' ? 120 : 60;\r\n    \r\n    return Array.from({ length: 12 }, (_, i) => ({\r\n      time: `${i * 5}s`,\r\n      requests: Math.floor(Math.random() * baseRPS) + baseRPS * 0.5\r\n    }));\r\n  };\r\n\r\n  // Get current test data\r\n  const getCurrentTestData = () => {\r\n    if (isTestRunning && realTimeData) {\r\n      return {\r\n        totalRequests: realTimeData.totalRequests || 0,\r\n        successfulRequests: Math.floor((realTimeData.successRate / 100) * (realTimeData.totalRequests || 1000)),\r\n        failedRequests: Math.floor(((100 - realTimeData.successRate) / 100) * (realTimeData.totalRequests || 1000)),\r\n        avgResponseTime: realTimeData.avgResponseTime || 0,\r\n        percentile95: realTimeData.avgResponseTime * 1.5 || 0,\r\n        peakRPS: realTimeData.requestsPerSecond || 0\r\n      };\r\n    }\r\n    \r\n    if (testResults && Object.keys(testResults).length > 0) {\r\n      return testResults;\r\n    }\r\n    \r\n    // Default data\r\n    return {\r\n      totalRequests: 1000,\r\n      successfulRequests: 920,\r\n      failedRequests: 80,\r\n      avgResponseTime: 392,\r\n      percentile95: 566,\r\n      peakRPS: 57\r\n    };\r\n  };\r\n\r\n  const currentData = getCurrentTestData();\r\n  const responseTimeData = getResponseTimeDistribution();\r\n  const requestsOverTimeData = getRequestsOverTime();\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n      {/* Card 1: Current Test Status */}\r\n      <div className=\"flex-1 min-w-0\">\r\n        <div className=\"card h-full\">\r\n          <div className=\"flex items-center space-x-3 mb-4\">\r\n            <Activity className=\"h-6 w-6 text-green-400\" />\r\n            <h3 className=\"text-lg font-semibold text-white\">Current Test</h3>\r\n          </div>\r\n          \r\n          <div className=\"space-y-4\">\r\n            {isTestRunning && currentTest ? (\r\n              <>\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-gray-300\">Test Type:</span>\r\n                  <span className=\"text-white font-semibold\">{currentTest.type.charAt(0).toUpperCase() + currentTest.type.slice(1)} Test</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-gray-300\">Active Users:</span>\r\n                  <span className=\"text-white font-semibold\">{realTimeData.activeUsers || currentTest.userCount}</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-gray-300\">Success Rate:</span>\r\n                  <span className=\"text-white font-semibold\">{realTimeData.successRate?.toFixed(1) || 0}%</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-gray-300\">Response Time:</span>\r\n                  <span className=\"text-white font-semibold\">{realTimeData.avgResponseTime || 0}ms</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-gray-300\">RPS:</span>\r\n                  <span className=\"text-white font-semibold\">{realTimeData.requestsPerSecond || 0}</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-gray-300\">Progress:</span>\r\n                  <span className=\"text-white font-semibold\">{Math.round(realTimeData.testProgress || 0)}%</span>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className=\"text-center py-8\">\r\n                <Clock className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                <p className=\"text-gray-400\">No test running</p>\r\n                <p className=\"text-sm text-gray-500\">Start a test to see live metrics</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Card 2: Test Results */}\r\n      <div className=\"flex-1 min-w-0\">\r\n        <div className=\"card h-full\">\r\n          <div className=\"flex items-center space-x-3 mb-4\">\r\n            <Zap className=\"h-6 w-6 text-yellow-400\" />\r\n            <h3 className=\"text-lg font-semibold text-white\">Test Results</h3>\r\n          </div>\r\n          \r\n          <div className=\"space-y-4\">\r\n            <h4 className=\"text-md font-semibold text-white\">Test Summary</h4>\r\n            \r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-300\">Total Requests:</span>\r\n                <span className=\"text-white font-semibold\">{currentData.totalRequests.toLocaleString()}</span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-300\">Successful Requests:</span>\r\n                <span className=\"text-white font-semibold\">{currentData.successfulRequests.toLocaleString()}</span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-300\">Failed Requests:</span>\r\n                <span className=\"text-white font-semibold\">{currentData.failedRequests.toLocaleString()}</span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-300\">Average Response Time:</span>\r\n                <span className=\"text-white font-semibold\">{currentData.avgResponseTime}ms</span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-300\">95th Percentile:</span>\r\n                <span className=\"text-white font-semibold\">{currentData.percentile95}ms</span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-gray-300\">Peak RPS:</span>\r\n                <span className=\"text-white font-semibold\">{currentData.peakRPS}</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"pt-4\">\r\n              <h5 className=\"text-sm font-semibold text-white mb-2\">Response Time Distribution</h5>\r\n              <div className=\"h-32\">\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                  <BarChart data={responseTimeData}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#374151\" />\r\n                    <XAxis dataKey=\"range\" stroke=\"#9CA3AF\" fontSize={10} />\r\n                    <YAxis stroke=\"#9CA3AF\" fontSize={10} />\r\n                    <Tooltip \r\n                      contentStyle={{ \r\n                        backgroundColor: '#1F2937', \r\n                        border: '1px solid #374151',\r\n                        borderRadius: '8px'\r\n                      }}\r\n                    />\r\n                    <Bar dataKey=\"count\" fill=\"#10B981\" />\r\n                  </BarChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n            \r\n            <div>\r\n              <h5 className=\"text-sm font-semibold text-white mb-2\">Requests Over Time</h5>\r\n              <div className=\"h-32\">\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                  <LineChart data={requestsOverTimeData}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#374151\" />\r\n                    <XAxis dataKey=\"time\" stroke=\"#9CA3AF\" fontSize={10} />\r\n                    <YAxis stroke=\"#9CA3AF\" fontSize={10} />\r\n                    <Tooltip \r\n                      contentStyle={{ \r\n                        backgroundColor: '#1F2937', \r\n                        border: '1px solid #374151',\r\n                        borderRadius: '8px'\r\n                      }}\r\n                    />\r\n                    <Line type=\"monotone\" dataKey=\"requests\" stroke=\"#EF4444\" strokeWidth={2} />\r\n                  </LineChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Card 3: AI Analysis */}\r\n      <div className=\"flex-1 min-w-0\">\r\n        <div className=\"card h-full\">\r\n          <div className=\"flex items-center space-x-3 mb-4\">\r\n            <Brain className=\"h-6 w-6 text-purple-400\" />\r\n            <h3 className=\"text-lg font-semibold text-white\">AI Analysis</h3>\r\n          </div>\r\n          \r\n          <div className=\"space-y-4\">\r\n            {isTestRunning || (testResults && Object.keys(testResults).length > 0) ? (\r\n              <AIAnalysis />\r\n            ) : (\r\n              <div className=\"text-center py-8\">\r\n                <Brain className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                <p className=\"text-gray-400\">No test data available</p>\r\n                <p className=\"text-sm text-gray-500\">Run a test to get AI analysis</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DynamicDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}