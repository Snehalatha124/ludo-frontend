{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sneha\\\\Downloads\\\\LUDO\\\\frontend\\\\src\\\\components\\\\AIAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { Brain, Image, Upload, AlertTriangle, CheckCircle, Clock, TrendingUp, Zap, Flame, Users, Gauge } from 'lucide-react';\nimport { useTestContext } from '../context/TestContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AIAnalysis = ({\n  analysis,\n  loading\n}) => {\n  _s();\n  var _ref, _ref2;\n  const [dynamicAnalysis, setDynamicAnalysis] = useState(null);\n  const [analysisKey, setAnalysisKey] = useState(0);\n  const {\n    currentTest,\n    testResults,\n    realTimeData,\n    isTestRunning\n  } = useTestContext();\n  const [imageUrl, setImageUrl] = useState('');\n  const [showImageInput, setShowImageInput] = useState(false);\n\n  // Generate dynamic AI analysis based on test results\n  useEffect(() => {\n    console.log('AI Analysis useEffect triggered:', {\n      isTestRunning,\n      currentTest,\n      realTimeData,\n      testResults\n    });\n\n    // Force refresh by updating the key\n    setAnalysisKey(prev => prev + 1);\n    if (isTestRunning && currentTest && realTimeData) {\n      console.log('Generating analysis for running test');\n      generateDynamicAnalysis();\n    } else if (testResults && Object.keys(testResults).length > 0) {\n      console.log('Generating analysis for completed test');\n      generateDynamicAnalysis();\n    }\n  }, [isTestRunning, currentTest, realTimeData, testResults]);\n  const generateDynamicAnalysis = () => {\n    const data = isTestRunning ? realTimeData : testResults;\n    const testType = (currentTest === null || currentTest === void 0 ? void 0 : currentTest.type) || 'unknown';\n    console.log('Generating dynamic analysis:', {\n      data,\n      testType,\n      isTestRunning\n    });\n\n    // Calculate performance metrics\n    const successRate = data.successRate || data.successfulRequests / data.totalRequests * 100 || 0;\n    const avgResponseTime = data.avgResponseTime || 0;\n    const activeUsers = data.activeUsers || data.userCount || 0;\n    const rps = data.requestsPerSecond || 0;\n    console.log('Calculated metrics:', {\n      successRate,\n      avgResponseTime,\n      activeUsers,\n      rps\n    });\n\n    // Generate assessment based on metrics\n    let assessment = 'Good';\n    let severity = 'LOW';\n    let confidenceScore = 0.85;\n    if (successRate < 90) {\n      assessment = 'Poor';\n      severity = 'HIGH';\n      confidenceScore = 0.95;\n    } else if (successRate < 95) {\n      assessment = 'Fair';\n      severity = 'MEDIUM';\n      confidenceScore = 0.90;\n    } else if (avgResponseTime > 1000) {\n      assessment = 'Fair';\n      severity = 'MEDIUM';\n      confidenceScore = 0.88;\n    }\n\n    // Generate test-specific insights\n    const insights = generateTestSpecificInsights(testType, data, successRate, avgResponseTime, activeUsers, rps);\n    const bottlenecks = generateBottlenecks(testType, data, successRate, avgResponseTime, activeUsers, rps);\n    const recommendations = generateRecommendations(testType, data, successRate, avgResponseTime, activeUsers, rps);\n    const problem = generateProblem(testType, data, successRate, avgResponseTime, activeUsers, rps);\n    const cause = generateRootCause(testType, data, successRate, avgResponseTime, activeUsers, rps);\n    const newAnalysis = {\n      assessment,\n      confidence_score: confidenceScore,\n      insights,\n      bottlenecks,\n      recommendations,\n      production_ready: successRate >= 95 && avgResponseTime <= 500,\n      problem,\n      cause,\n      severity\n    };\n    console.log('Setting dynamic analysis:', newAnalysis);\n    setDynamicAnalysis(newAnalysis);\n  };\n  const generateTestSpecificInsights = (testType, data, successRate, avgResponseTime, activeUsers, rps) => {\n    const insights = [];\n    switch (testType) {\n      case 'load':\n        insights.push(`Load test with ${activeUsers} users achieved ${successRate.toFixed(1)}% success rate`);\n        insights.push(`Average response time of ${avgResponseTime}ms under ${rps} requests per second`);\n        if (successRate >= 95) {\n          insights.push('System handles expected load efficiently');\n        } else {\n          insights.push('System struggles under current load conditions');\n        }\n        break;\n      case 'stress':\n        insights.push(`Stress test reached ${activeUsers} peak users with ${successRate.toFixed(1)}% success rate`);\n        insights.push(`Response time increased to ${avgResponseTime}ms under stress conditions`);\n        if (avgResponseTime > 2000) {\n          insights.push('System shows signs of stress under high load');\n        } else {\n          insights.push('System maintains stability under stress conditions');\n        }\n        break;\n      case 'spike':\n        insights.push(`Spike test with ${activeUsers} users resulted in ${(100 - successRate).toFixed(1)}% failure rate`);\n        insights.push(`System took ${Math.max(5, avgResponseTime / 200)}s to recover from spike`);\n        if (successRate < 80) {\n          insights.push('System vulnerable to sudden traffic spikes');\n        } else {\n          insights.push('System shows good spike handling capability');\n        }\n        break;\n      case 'soak':\n        insights.push(`Soak test ran for extended duration with ${successRate.toFixed(1)}% success rate`);\n        insights.push(`Memory usage remained stable at ${avgResponseTime}ms average response time`);\n        if (successRate >= 98) {\n          insights.push('System demonstrates excellent long-term stability');\n        } else {\n          insights.push('System shows degradation over extended periods');\n        }\n        break;\n      default:\n        insights.push(`Performance test completed with ${successRate.toFixed(1)}% success rate`);\n        insights.push(`Average response time: ${avgResponseTime}ms`);\n    }\n    return insights;\n  };\n  const generateBottlenecks = (testType, data, successRate, avgResponseTime, activeUsers, rps) => {\n    const bottlenecks = [];\n    if (successRate < 95) {\n      bottlenecks.push('High failure rate indicates system instability');\n    }\n    if (avgResponseTime > 1000) {\n      bottlenecks.push('Slow response times suggest performance bottlenecks');\n    }\n    switch (testType) {\n      case 'load':\n        if (rps < activeUsers * 0.1) {\n          bottlenecks.push('Low requests per second indicates throughput limitations');\n        }\n        break;\n      case 'stress':\n        if (avgResponseTime > 2000) {\n          bottlenecks.push('Response time degradation under stress suggests resource constraints');\n        }\n        break;\n      case 'spike':\n        if (successRate < 80) {\n          bottlenecks.push('Poor spike handling indicates insufficient capacity planning');\n        }\n        break;\n      case 'soak':\n        if (successRate < 98) {\n          bottlenecks.push('Memory leaks or resource exhaustion over time');\n        }\n        break;\n    }\n    return bottlenecks;\n  };\n  const generateRecommendations = (testType, data, successRate, avgResponseTime, activeUsers, rps) => {\n    const recommendations = [];\n    if (successRate < 95) {\n      recommendations.push('Implement better error handling and retry mechanisms');\n      recommendations.push('Review and optimize database queries and connection pooling');\n    }\n    if (avgResponseTime > 1000) {\n      recommendations.push('Consider implementing caching strategies (Redis, CDN)');\n      recommendations.push('Optimize application code and database indexes');\n    }\n    switch (testType) {\n      case 'load':\n        if (rps < activeUsers * 0.1) {\n          recommendations.push('Scale horizontally by adding more server instances');\n          recommendations.push('Implement load balancing for better distribution');\n        }\n        break;\n      case 'stress':\n        if (avgResponseTime > 2000) {\n          recommendations.push('Increase server resources (CPU, RAM)');\n          recommendations.push('Implement circuit breakers for external dependencies');\n        }\n        break;\n      case 'spike':\n        if (successRate < 80) {\n          recommendations.push('Implement auto-scaling based on traffic patterns');\n          recommendations.push('Add rate limiting and queue management systems');\n        }\n        break;\n      case 'soak':\n        if (successRate < 98) {\n          recommendations.push('Implement memory monitoring and garbage collection optimization');\n          recommendations.push('Add resource cleanup and connection pooling management');\n        }\n        break;\n    }\n\n    // Add general recommendations\n    recommendations.push('Monitor system metrics continuously in production');\n    recommendations.push('Set up alerting for performance degradation');\n    recommendations.push('Regular performance testing in CI/CD pipeline');\n    return recommendations;\n  };\n  const generateProblem = (testType, data, successRate, avgResponseTime, activeUsers, rps) => {\n    if (successRate < 90) {\n      return `High failure rate (${(100 - successRate).toFixed(1)}%) indicates system instability under ${testType} conditions`;\n    }\n    if (avgResponseTime > 2000) {\n      return `Slow response times (${avgResponseTime}ms) suggest performance bottlenecks during ${testType} testing`;\n    }\n    switch (testType) {\n      case 'load':\n        if (rps < activeUsers * 0.1) {\n          return `Low throughput (${rps} RPS) for ${activeUsers} users indicates capacity limitations`;\n        }\n        break;\n      case 'stress':\n        if (avgResponseTime > 1500) {\n          return `Response time degradation under stress suggests resource constraints`;\n        }\n        break;\n      case 'spike':\n        if (successRate < 85) {\n          return `Poor spike handling with ${(100 - successRate).toFixed(1)}% failure rate`;\n        }\n        break;\n      case 'soak':\n        if (successRate < 98) {\n          return `System degradation over extended periods indicates resource leaks`;\n        }\n        break;\n    }\n    return 'No significant problems detected - system performing within expected parameters';\n  };\n  const generateRootCause = (testType, data, successRate, avgResponseTime, activeUsers, rps) => {\n    if (successRate < 90) {\n      return 'Insufficient server resources or poor error handling mechanisms';\n    }\n    if (avgResponseTime > 2000) {\n      return 'Database bottlenecks, slow external API calls, or inefficient code execution';\n    }\n    switch (testType) {\n      case 'load':\n        if (rps < activeUsers * 0.1) {\n          return 'Limited server capacity or inefficient request processing';\n        }\n        break;\n      case 'stress':\n        if (avgResponseTime > 1500) {\n          return 'Resource exhaustion (CPU, memory, database connections) under high load';\n        }\n        break;\n      case 'spike':\n        if (successRate < 85) {\n          return 'Inadequate capacity planning and lack of auto-scaling mechanisms';\n        }\n        break;\n      case 'soak':\n        if (successRate < 98) {\n          return 'Memory leaks, connection pool exhaustion, or resource cleanup issues';\n        }\n        break;\n    }\n    return 'System architecture and resource allocation are well-optimized for current requirements';\n  };\n\n  // Always use dynamic analysis when available, regardless of analysis prop\n  const finalAnalysis = dynamicAnalysis || analysis;\n  const isDynamic = !!dynamicAnalysis;\n  console.log('AI Analysis render:', {\n    dynamicAnalysis,\n    analysis,\n    finalAnalysis,\n    isDynamic\n  });\n  if (!finalAnalysis) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-8\",\n        children: [/*#__PURE__*/_jsxDEV(Brain, {\n          className: \"h-12 w-12 text-purple-400 mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-white mb-2\",\n          children: \"AI Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: \"Run a performance test to get AI-powered insights\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this);\n  }\n\n  // For dynamic analysis, we need to handle the structure differently\n  const {\n    success,\n    analysis: analysisData,\n    agent_response,\n    ai_provider,\n    image_analyzed\n  } = isDynamic ? {\n    success: true,\n    analysis: finalAnalysis,\n    agent_response: {\n      severity: finalAnalysis.severity\n    },\n    ai_provider: 'dynamic'\n  } : finalAnalysis;\n  if (!success) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3 text-red-400\",\n        children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n          className: \"h-6 w-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold\",\n            children: \"Analysis Failed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm\",\n            children: analysis.error || 'Unknown error occurred'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this);\n  }\n  const getSeverityColor = severity => {\n    switch (severity === null || severity === void 0 ? void 0 : severity.toUpperCase()) {\n      case 'CRITICAL':\n        return 'text-red-400';\n      case 'HIGH':\n        return 'text-orange-400';\n      case 'MEDIUM':\n        return 'text-yellow-400';\n      case 'LOW':\n        return 'text-green-400';\n      default:\n        return 'text-gray-400';\n    }\n  };\n  const getAssessmentColor = assessment => {\n    switch (assessment === null || assessment === void 0 ? void 0 : assessment.toLowerCase()) {\n      case 'excellent':\n        return 'text-green-400';\n      case 'good':\n        return 'text-blue-400';\n      case 'fair':\n        return 'text-yellow-400';\n      case 'poor':\n        return 'text-red-400';\n      default:\n        return 'text-gray-400';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(Brain, {\n            className: \"h-6 w-6 text-purple-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold text-white\",\n              children: isDynamic ? 'Dynamic AI Analysis' : 'AI Analysis'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-400\",\n              children: isDynamic ? `Real-time analysis based on ${(currentTest === null || currentTest === void 0 ? void 0 : currentTest.type) || 'performance'} test results` : `Powered by ${ai_provider === 'openrouter' ? 'OpenRouter (Gemini 2.0 Flash)' : ai_provider === 'gemini' ? 'Google Gemini' : 'Fallback Analysis'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), isDynamic ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2 text-green-400\",\n          children: [/*#__PURE__*/_jsxDEV(Zap, {\n            className: \"h-4 w-4 animate-pulse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm\",\n            children: \"Live Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 14\n        }, this) : image_analyzed && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2 text-blue-400\",\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            className: \"h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm\",\n            children: \"Image Analyzed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm font-medium text-gray-400\",\n              children: \"Assessment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `text-2xl font-bold ${getAssessmentColor(isDynamic ? finalAnalysis.assessment : analysisData.assessment)}`,\n              children: isDynamic ? finalAnalysis.assessment : analysisData.assessment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CheckCircle, {\n            className: \"h-8 w-8 text-green-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        transition: {\n          delay: 0.1\n        },\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm font-medium text-gray-400\",\n              children: \"Severity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `text-2xl font-bold ${getSeverityColor(isDynamic ? finalAnalysis.severity : agent_response === null || agent_response === void 0 ? void 0 : agent_response.severity)}`,\n              children: isDynamic ? finalAnalysis.severity : (agent_response === null || agent_response === void 0 ? void 0 : agent_response.severity) || 'MEDIUM'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AlertTriangle, {\n            className: \"h-8 w-8 text-orange-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        transition: {\n          delay: 0.2\n        },\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm font-medium text-gray-400\",\n              children: \"Confidence\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-purple-400\",\n              children: [Math.round((isDynamic ? finalAnalysis.confidence_score : analysisData.confidence_score || 0) * 100), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TrendingUp, {\n            className: \"h-8 w-8 text-purple-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0,\n        y: 20\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      transition: {\n        delay: 0.3\n      },\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-white mb-4\",\n        children: \"AI Insights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-3\",\n        children: (_ref = isDynamic ? finalAnalysis.insights : analysisData.insights) === null || _ref === void 0 ? void 0 : _ref.map((insight, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-start space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-2 h-2 bg-purple-400 rounded-full mt-2 flex-shrink-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-300\",\n            children: insight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        transition: {\n          delay: 0.4\n        },\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-white mb-4\",\n          children: \"Problem Identified\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300\",\n          children: isDynamic ? finalAnalysis.problem : (agent_response === null || agent_response === void 0 ? void 0 : agent_response.problem) || 'No significant problems detected'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        transition: {\n          delay: 0.5\n        },\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-white mb-4\",\n          children: \"Root Cause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300\",\n          children: isDynamic ? finalAnalysis.cause : (agent_response === null || agent_response === void 0 ? void 0 : agent_response.cause) || 'System performing within expected parameters'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }, this), (isDynamic ? finalAnalysis.bottlenecks : analysisData.bottlenecks) && (isDynamic ? finalAnalysis.bottlenecks : analysisData.bottlenecks).length > 0 && /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0,\n        y: 20\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      transition: {\n        delay: 0.6\n      },\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-white mb-4\",\n        children: \"Potential Bottlenecks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: (isDynamic ? finalAnalysis.bottlenecks : analysisData.bottlenecks).map((bottleneck, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-start space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-2 h-2 bg-red-400 rounded-full mt-2 flex-shrink-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-300\",\n            children: bottleneck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0,\n        y: 20\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      transition: {\n        delay: 0.7\n      },\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-white mb-4\",\n        children: \"AI Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-3\",\n        children: (_ref2 = isDynamic ? finalAnalysis.recommendations : analysisData.recommendations) === null || _ref2 === void 0 ? void 0 : _ref2.map((recommendation, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-start space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-2 h-2 bg-blue-400 rounded-full mt-2 flex-shrink-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-300\",\n            children: recommendation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0,\n        y: 20\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      transition: {\n        delay: 0.8\n      },\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-white\",\n            children: \"Production Readiness\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-400\",\n            children: (isDynamic ? finalAnalysis.production_ready : analysisData.production_ready) ? 'System is ready for production deployment' : 'System needs optimization before production deployment'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex items-center space-x-2 ${(isDynamic ? finalAnalysis.production_ready : analysisData.production_ready) ? 'text-green-400' : 'text-orange-400'}`,\n          children: [(isDynamic ? finalAnalysis.production_ready : analysisData.production_ready) ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n            className: \"h-6 w-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Clock, {\n            className: \"h-6 w-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: (isDynamic ? finalAnalysis.production_ready : analysisData.production_ready) ? 'Ready' : 'Needs Work'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 7\n    }, this), ai_provider === 'openrouter' && /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0,\n        y: 20\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      transition: {\n        delay: 0.9\n      },\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-white\",\n          children: \"Image Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowImageInput(!showImageInput),\n          className: \"btn-secondary text-sm\",\n          children: showImageInput ? 'Hide' : 'Add Image'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 11\n      }, this), showImageInput && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-300 mb-2\",\n            children: \"Image URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"url\",\n            value: imageUrl,\n            onChange: e => setImageUrl(e.target.value),\n            placeholder: \"https://example.com/image.jpg\",\n            className: \"input-field w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            // This would trigger a new analysis with the image\n            console.log('Analyze with image:', imageUrl);\n          },\n          className: \"btn-primary\",\n          disabled: !imageUrl,\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            className: \"h-4 w-4 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 17\n          }, this), \"Analyze with Image\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-400 mt-2\",\n        children: \"Add screenshots or charts to get enhanced AI analysis with visual context.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 9\n    }, this), analysis.auto_retry && /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0,\n        y: 20\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      transition: {\n        delay: 1.0\n      },\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-2 h-2 rounded-full ${analysis.auto_retry.triggered ? 'bg-green-400' : 'bg-gray-400'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold text-white\",\n            children: \"Auto-Retry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-400\",\n            children: analysis.auto_retry.triggered ? `New test initiated: ${analysis.auto_retry.new_test_id}` : analysis.auto_retry.reason || 'No retry recommended'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 9\n    }, this)]\n  }, analysisKey, true, {\n    fileName: _jsxFileName,\n    lineNumber: 362,\n    columnNumber: 5\n  }, this);\n};\n_s(AIAnalysis, \"5C3wUjp+WnMlKU6zzvttEN3V3vI=\", false, function () {\n  return [useTestContext];\n});\n_c = AIAnalysis;\nexport default AIAnalysis;\nvar _c;\n$RefreshReg$(_c, \"AIAnalysis\");","map":{"version":3,"names":["React","useState","useEffect","motion","Brain","Image","Upload","AlertTriangle","CheckCircle","Clock","TrendingUp","Zap","Flame","Users","Gauge","useTestContext","jsxDEV","_jsxDEV","AIAnalysis","analysis","loading","_s","_ref","_ref2","dynamicAnalysis","setDynamicAnalysis","analysisKey","setAnalysisKey","currentTest","testResults","realTimeData","isTestRunning","imageUrl","setImageUrl","showImageInput","setShowImageInput","console","log","prev","generateDynamicAnalysis","Object","keys","length","data","testType","type","successRate","successfulRequests","totalRequests","avgResponseTime","activeUsers","userCount","rps","requestsPerSecond","assessment","severity","confidenceScore","insights","generateTestSpecificInsights","bottlenecks","generateBottlenecks","recommendations","generateRecommendations","problem","generateProblem","cause","generateRootCause","newAnalysis","confidence_score","production_ready","push","toFixed","Math","max","finalAnalysis","isDynamic","className","children","fileName","_jsxFileName","lineNumber","columnNumber","success","analysisData","agent_response","ai_provider","image_analyzed","error","getSeverityColor","toUpperCase","getAssessmentColor","toLowerCase","div","initial","opacity","y","animate","transition","delay","round","map","insight","index","bottleneck","recommendation","onClick","value","onChange","e","target","placeholder","disabled","auto_retry","triggered","new_test_id","reason","_c","$RefreshReg$"],"sources":["C:/Users/Sneha/Downloads/LUDO/frontend/src/components/AIAnalysis.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { Brain, Image, Upload, AlertTriangle, CheckCircle, Clock, TrendingUp, Zap, Flame, Users, Gauge } from 'lucide-react';\r\nimport { useTestContext } from '../context/TestContext';\r\n\r\nconst AIAnalysis = ({ analysis, loading }) => {\r\n  const [dynamicAnalysis, setDynamicAnalysis] = useState(null);\r\n  const [analysisKey, setAnalysisKey] = useState(0);\r\n  const { currentTest, testResults, realTimeData, isTestRunning } = useTestContext();\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [showImageInput, setShowImageInput] = useState(false);\r\n\r\n  // Generate dynamic AI analysis based on test results\r\n  useEffect(() => {\r\n    console.log('AI Analysis useEffect triggered:', { isTestRunning, currentTest, realTimeData, testResults });\r\n    \r\n    // Force refresh by updating the key\r\n    setAnalysisKey(prev => prev + 1);\r\n    \r\n    if (isTestRunning && currentTest && realTimeData) {\r\n      console.log('Generating analysis for running test');\r\n      generateDynamicAnalysis();\r\n    } else if (testResults && Object.keys(testResults).length > 0) {\r\n      console.log('Generating analysis for completed test');\r\n      generateDynamicAnalysis();\r\n    }\r\n  }, [isTestRunning, currentTest, realTimeData, testResults]);\r\n\r\n  const generateDynamicAnalysis = () => {\r\n    const data = isTestRunning ? realTimeData : testResults;\r\n    const testType = currentTest?.type || 'unknown';\r\n    \r\n    console.log('Generating dynamic analysis:', { data, testType, isTestRunning });\r\n    \r\n    // Calculate performance metrics\r\n    const successRate = data.successRate || ((data.successfulRequests / data.totalRequests) * 100) || 0;\r\n    const avgResponseTime = data.avgResponseTime || 0;\r\n    const activeUsers = data.activeUsers || data.userCount || 0;\r\n    const rps = data.requestsPerSecond || 0;\r\n    \r\n    console.log('Calculated metrics:', { successRate, avgResponseTime, activeUsers, rps });\r\n\r\n    // Generate assessment based on metrics\r\n    let assessment = 'Good';\r\n    let severity = 'LOW';\r\n    let confidenceScore = 0.85;\r\n\r\n    if (successRate < 90) {\r\n      assessment = 'Poor';\r\n      severity = 'HIGH';\r\n      confidenceScore = 0.95;\r\n    } else if (successRate < 95) {\r\n      assessment = 'Fair';\r\n      severity = 'MEDIUM';\r\n      confidenceScore = 0.90;\r\n    } else if (avgResponseTime > 1000) {\r\n      assessment = 'Fair';\r\n      severity = 'MEDIUM';\r\n      confidenceScore = 0.88;\r\n    }\r\n\r\n    // Generate test-specific insights\r\n    const insights = generateTestSpecificInsights(testType, data, successRate, avgResponseTime, activeUsers, rps);\r\n    const bottlenecks = generateBottlenecks(testType, data, successRate, avgResponseTime, activeUsers, rps);\r\n    const recommendations = generateRecommendations(testType, data, successRate, avgResponseTime, activeUsers, rps);\r\n    const problem = generateProblem(testType, data, successRate, avgResponseTime, activeUsers, rps);\r\n    const cause = generateRootCause(testType, data, successRate, avgResponseTime, activeUsers, rps);\r\n\r\n    const newAnalysis = {\r\n      assessment,\r\n      confidence_score: confidenceScore,\r\n      insights,\r\n      bottlenecks,\r\n      recommendations,\r\n      production_ready: successRate >= 95 && avgResponseTime <= 500,\r\n      problem,\r\n      cause,\r\n      severity\r\n    };\r\n\r\n    console.log('Setting dynamic analysis:', newAnalysis);\r\n    setDynamicAnalysis(newAnalysis);\r\n  };\r\n\r\n  const generateTestSpecificInsights = (testType, data, successRate, avgResponseTime, activeUsers, rps) => {\r\n    const insights = [];\r\n    \r\n    switch (testType) {\r\n      case 'load':\r\n        insights.push(`Load test with ${activeUsers} users achieved ${successRate.toFixed(1)}% success rate`);\r\n        insights.push(`Average response time of ${avgResponseTime}ms under ${rps} requests per second`);\r\n        if (successRate >= 95) {\r\n          insights.push('System handles expected load efficiently');\r\n        } else {\r\n          insights.push('System struggles under current load conditions');\r\n        }\r\n        break;\r\n      \r\n      case 'stress':\r\n        insights.push(`Stress test reached ${activeUsers} peak users with ${successRate.toFixed(1)}% success rate`);\r\n        insights.push(`Response time increased to ${avgResponseTime}ms under stress conditions`);\r\n        if (avgResponseTime > 2000) {\r\n          insights.push('System shows signs of stress under high load');\r\n        } else {\r\n          insights.push('System maintains stability under stress conditions');\r\n        }\r\n        break;\r\n      \r\n      case 'spike':\r\n        insights.push(`Spike test with ${activeUsers} users resulted in ${(100 - successRate).toFixed(1)}% failure rate`);\r\n        insights.push(`System took ${Math.max(5, avgResponseTime / 200)}s to recover from spike`);\r\n        if (successRate < 80) {\r\n          insights.push('System vulnerable to sudden traffic spikes');\r\n        } else {\r\n          insights.push('System shows good spike handling capability');\r\n        }\r\n        break;\r\n      \r\n      case 'soak':\r\n        insights.push(`Soak test ran for extended duration with ${successRate.toFixed(1)}% success rate`);\r\n        insights.push(`Memory usage remained stable at ${avgResponseTime}ms average response time`);\r\n        if (successRate >= 98) {\r\n          insights.push('System demonstrates excellent long-term stability');\r\n        } else {\r\n          insights.push('System shows degradation over extended periods');\r\n        }\r\n        break;\r\n      \r\n      default:\r\n        insights.push(`Performance test completed with ${successRate.toFixed(1)}% success rate`);\r\n        insights.push(`Average response time: ${avgResponseTime}ms`);\r\n    }\r\n\r\n    return insights;\r\n  };\r\n\r\n  const generateBottlenecks = (testType, data, successRate, avgResponseTime, activeUsers, rps) => {\r\n    const bottlenecks = [];\r\n    \r\n    if (successRate < 95) {\r\n      bottlenecks.push('High failure rate indicates system instability');\r\n    }\r\n    \r\n    if (avgResponseTime > 1000) {\r\n      bottlenecks.push('Slow response times suggest performance bottlenecks');\r\n    }\r\n    \r\n    switch (testType) {\r\n      case 'load':\r\n        if (rps < activeUsers * 0.1) {\r\n          bottlenecks.push('Low requests per second indicates throughput limitations');\r\n        }\r\n        break;\r\n      \r\n      case 'stress':\r\n        if (avgResponseTime > 2000) {\r\n          bottlenecks.push('Response time degradation under stress suggests resource constraints');\r\n        }\r\n        break;\r\n      \r\n      case 'spike':\r\n        if (successRate < 80) {\r\n          bottlenecks.push('Poor spike handling indicates insufficient capacity planning');\r\n        }\r\n        break;\r\n      \r\n      case 'soak':\r\n        if (successRate < 98) {\r\n          bottlenecks.push('Memory leaks or resource exhaustion over time');\r\n        }\r\n        break;\r\n    }\r\n\r\n    return bottlenecks;\r\n  };\r\n\r\n  const generateRecommendations = (testType, data, successRate, avgResponseTime, activeUsers, rps) => {\r\n    const recommendations = [];\r\n    \r\n    if (successRate < 95) {\r\n      recommendations.push('Implement better error handling and retry mechanisms');\r\n      recommendations.push('Review and optimize database queries and connection pooling');\r\n    }\r\n    \r\n    if (avgResponseTime > 1000) {\r\n      recommendations.push('Consider implementing caching strategies (Redis, CDN)');\r\n      recommendations.push('Optimize application code and database indexes');\r\n    }\r\n    \r\n    switch (testType) {\r\n      case 'load':\r\n        if (rps < activeUsers * 0.1) {\r\n          recommendations.push('Scale horizontally by adding more server instances');\r\n          recommendations.push('Implement load balancing for better distribution');\r\n        }\r\n        break;\r\n      \r\n      case 'stress':\r\n        if (avgResponseTime > 2000) {\r\n          recommendations.push('Increase server resources (CPU, RAM)');\r\n          recommendations.push('Implement circuit breakers for external dependencies');\r\n        }\r\n        break;\r\n      \r\n      case 'spike':\r\n        if (successRate < 80) {\r\n          recommendations.push('Implement auto-scaling based on traffic patterns');\r\n          recommendations.push('Add rate limiting and queue management systems');\r\n        }\r\n        break;\r\n      \r\n      case 'soak':\r\n        if (successRate < 98) {\r\n          recommendations.push('Implement memory monitoring and garbage collection optimization');\r\n          recommendations.push('Add resource cleanup and connection pooling management');\r\n        }\r\n        break;\r\n    }\r\n\r\n    // Add general recommendations\r\n    recommendations.push('Monitor system metrics continuously in production');\r\n    recommendations.push('Set up alerting for performance degradation');\r\n    recommendations.push('Regular performance testing in CI/CD pipeline');\r\n\r\n    return recommendations;\r\n  };\r\n\r\n  const generateProblem = (testType, data, successRate, avgResponseTime, activeUsers, rps) => {\r\n    if (successRate < 90) {\r\n      return `High failure rate (${(100 - successRate).toFixed(1)}%) indicates system instability under ${testType} conditions`;\r\n    }\r\n    \r\n    if (avgResponseTime > 2000) {\r\n      return `Slow response times (${avgResponseTime}ms) suggest performance bottlenecks during ${testType} testing`;\r\n    }\r\n    \r\n    switch (testType) {\r\n      case 'load':\r\n        if (rps < activeUsers * 0.1) {\r\n          return `Low throughput (${rps} RPS) for ${activeUsers} users indicates capacity limitations`;\r\n        }\r\n        break;\r\n      \r\n      case 'stress':\r\n        if (avgResponseTime > 1500) {\r\n          return `Response time degradation under stress suggests resource constraints`;\r\n        }\r\n        break;\r\n      \r\n      case 'spike':\r\n        if (successRate < 85) {\r\n          return `Poor spike handling with ${(100 - successRate).toFixed(1)}% failure rate`;\r\n        }\r\n        break;\r\n      \r\n      case 'soak':\r\n        if (successRate < 98) {\r\n          return `System degradation over extended periods indicates resource leaks`;\r\n        }\r\n        break;\r\n    }\r\n    \r\n    return 'No significant problems detected - system performing within expected parameters';\r\n  };\r\n\r\n  const generateRootCause = (testType, data, successRate, avgResponseTime, activeUsers, rps) => {\r\n    if (successRate < 90) {\r\n      return 'Insufficient server resources or poor error handling mechanisms';\r\n    }\r\n    \r\n    if (avgResponseTime > 2000) {\r\n      return 'Database bottlenecks, slow external API calls, or inefficient code execution';\r\n    }\r\n    \r\n    switch (testType) {\r\n      case 'load':\r\n        if (rps < activeUsers * 0.1) {\r\n          return 'Limited server capacity or inefficient request processing';\r\n        }\r\n        break;\r\n      \r\n      case 'stress':\r\n        if (avgResponseTime > 1500) {\r\n          return 'Resource exhaustion (CPU, memory, database connections) under high load';\r\n        }\r\n        break;\r\n      \r\n      case 'spike':\r\n        if (successRate < 85) {\r\n          return 'Inadequate capacity planning and lack of auto-scaling mechanisms';\r\n        }\r\n        break;\r\n      \r\n      case 'soak':\r\n        if (successRate < 98) {\r\n          return 'Memory leaks, connection pool exhaustion, or resource cleanup issues';\r\n        }\r\n        break;\r\n    }\r\n    \r\n    return 'System architecture and resource allocation are well-optimized for current requirements';\r\n  };\r\n\r\n  // Always use dynamic analysis when available, regardless of analysis prop\r\n  const finalAnalysis = dynamicAnalysis || analysis;\r\n  const isDynamic = !!dynamicAnalysis;\r\n\r\n  console.log('AI Analysis render:', { dynamicAnalysis, analysis, finalAnalysis, isDynamic });\r\n\r\n  if (!finalAnalysis) {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"text-center py-8\">\r\n          <Brain className=\"h-12 w-12 text-purple-400 mx-auto mb-4\" />\r\n          <h3 className=\"text-lg font-semibold text-white mb-2\">AI Analysis</h3>\r\n          <p className=\"text-gray-400\">Run a performance test to get AI-powered insights</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // For dynamic analysis, we need to handle the structure differently\r\n  const { success, analysis: analysisData, agent_response, ai_provider, image_analyzed } = isDynamic ? \r\n    { success: true, analysis: finalAnalysis, agent_response: { severity: finalAnalysis.severity }, ai_provider: 'dynamic' } : \r\n    finalAnalysis;\r\n\r\n  if (!success) {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"flex items-center space-x-3 text-red-400\">\r\n          <AlertTriangle className=\"h-6 w-6\" />\r\n          <div>\r\n            <h3 className=\"font-semibold\">Analysis Failed</h3>\r\n            <p className=\"text-sm\">{analysis.error || 'Unknown error occurred'}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const getSeverityColor = (severity) => {\r\n    switch (severity?.toUpperCase()) {\r\n      case 'CRITICAL': return 'text-red-400';\r\n      case 'HIGH': return 'text-orange-400';\r\n      case 'MEDIUM': return 'text-yellow-400';\r\n      case 'LOW': return 'text-green-400';\r\n      default: return 'text-gray-400';\r\n    }\r\n  };\r\n\r\n  const getAssessmentColor = (assessment) => {\r\n    switch (assessment?.toLowerCase()) {\r\n      case 'excellent': return 'text-green-400';\r\n      case 'good': return 'text-blue-400';\r\n      case 'fair': return 'text-yellow-400';\r\n      case 'poor': return 'text-red-400';\r\n      default: return 'text-gray-400';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div key={analysisKey} className=\"space-y-6\">\r\n      {/* AI Provider Info */}\r\n      <div className=\"card\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <Brain className=\"h-6 w-6 text-purple-400\" />\r\n            <div>\r\n              <h3 className=\"font-semibold text-white\">\r\n                {isDynamic ? 'Dynamic AI Analysis' : 'AI Analysis'}\r\n              </h3>\r\n              <p className=\"text-sm text-gray-400\">\r\n                {isDynamic \r\n                  ? `Real-time analysis based on ${currentTest?.type || 'performance'} test results`\r\n                  : `Powered by ${ai_provider === 'openrouter' ? 'OpenRouter (Gemini 2.0 Flash)' : \r\n                     ai_provider === 'gemini' ? 'Google Gemini' : 'Fallback Analysis'}`\r\n                }\r\n              </p>\r\n            </div>\r\n          </div>\r\n                     {isDynamic ? (\r\n             <div className=\"flex items-center space-x-2 text-green-400\">\r\n               <Zap className=\"h-4 w-4 animate-pulse\" />\r\n               <span className=\"text-sm\">Live Analysis</span>\r\n             </div>\r\n           ) : image_analyzed && (\r\n            <div className=\"flex items-center space-x-2 text-blue-400\">\r\n              <Image className=\"h-4 w-4\" />\r\n              <span className=\"text-sm\">Image Analyzed</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Assessment Summary */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n        <motion.div \r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"card\"\r\n        >\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-400\">Assessment</p>\r\n              <p className={`text-2xl font-bold ${getAssessmentColor(isDynamic ? finalAnalysis.assessment : analysisData.assessment)}`}>\r\n                {isDynamic ? finalAnalysis.assessment : analysisData.assessment}\r\n              </p>\r\n            </div>\r\n            <CheckCircle className=\"h-8 w-8 text-green-400\" />\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div \r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.1 }}\r\n          className=\"card\"\r\n        >\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-400\">Severity</p>\r\n              <p className={`text-2xl font-bold ${getSeverityColor(isDynamic ? finalAnalysis.severity : agent_response?.severity)}`}>\r\n                {isDynamic ? finalAnalysis.severity : (agent_response?.severity || 'MEDIUM')}\r\n              </p>\r\n            </div>\r\n            <AlertTriangle className=\"h-8 w-8 text-orange-400\" />\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div \r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.2 }}\r\n          className=\"card\"\r\n        >\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-400\">Confidence</p>\r\n              <p className=\"text-2xl font-bold text-purple-400\">\r\n                {Math.round((isDynamic ? finalAnalysis.confidence_score : (analysisData.confidence_score || 0)) * 100)}%\r\n              </p>\r\n            </div>\r\n            <TrendingUp className=\"h-8 w-8 text-purple-400\" />\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n\r\n      {/* AI Insights */}\r\n      <motion.div \r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ delay: 0.3 }}\r\n        className=\"card\"\r\n      >\r\n        <h3 className=\"text-lg font-semibold text-white mb-4\">AI Insights</h3>\r\n        <div className=\"space-y-3\">\r\n          {(isDynamic ? finalAnalysis.insights : analysisData.insights)?.map((insight, index) => (\r\n            <div key={index} className=\"flex items-start space-x-3\">\r\n              <div className=\"w-2 h-2 bg-purple-400 rounded-full mt-2 flex-shrink-0\"></div>\r\n              <p className=\"text-gray-300\">{insight}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </motion.div>\r\n\r\n      {/* Problem & Root Cause */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n        <motion.div \r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.4 }}\r\n          className=\"card\"\r\n        >\r\n          <h3 className=\"text-lg font-semibold text-white mb-4\">Problem Identified</h3>\r\n          <p className=\"text-gray-300\">{isDynamic ? finalAnalysis.problem : (agent_response?.problem || 'No significant problems detected')}</p>\r\n        </motion.div>\r\n\r\n        <motion.div \r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.5 }}\r\n          className=\"card\"\r\n        >\r\n          <h3 className=\"text-lg font-semibold text-white mb-4\">Root Cause</h3>\r\n          <p className=\"text-gray-300\">{isDynamic ? finalAnalysis.cause : (agent_response?.cause || 'System performing within expected parameters')}</p>\r\n        </motion.div>\r\n      </div>\r\n\r\n      {/* Potential Bottlenecks */}\r\n      {(isDynamic ? finalAnalysis.bottlenecks : analysisData.bottlenecks) && (isDynamic ? finalAnalysis.bottlenecks : analysisData.bottlenecks).length > 0 && (\r\n        <motion.div \r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.6 }}\r\n          className=\"card\"\r\n        >\r\n          <h3 className=\"text-lg font-semibold text-white mb-4\">Potential Bottlenecks</h3>\r\n          <div className=\"space-y-2\">\r\n            {(isDynamic ? finalAnalysis.bottlenecks : analysisData.bottlenecks).map((bottleneck, index) => (\r\n              <div key={index} className=\"flex items-start space-x-3\">\r\n                <div className=\"w-2 h-2 bg-red-400 rounded-full mt-2 flex-shrink-0\"></div>\r\n                <p className=\"text-gray-300\">{bottleneck}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n\r\n      {/* AI Recommendations */}\r\n      <motion.div \r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ delay: 0.7 }}\r\n        className=\"card\"\r\n      >\r\n        <h3 className=\"text-lg font-semibold text-white mb-4\">AI Recommendations</h3>\r\n        <div className=\"space-y-3\">\r\n          {(isDynamic ? finalAnalysis.recommendations : analysisData.recommendations)?.map((recommendation, index) => (\r\n            <div key={index} className=\"flex items-start space-x-3\">\r\n              <div className=\"w-2 h-2 bg-blue-400 rounded-full mt-2 flex-shrink-0\"></div>\r\n              <p className=\"text-gray-300\">{recommendation}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </motion.div>\r\n\r\n      {/* Production Readiness */}\r\n      <motion.div \r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ delay: 0.8 }}\r\n        className=\"card\"\r\n      >\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-white\">Production Readiness</h3>\r\n            <p className=\"text-gray-400\">\r\n              {(isDynamic ? finalAnalysis.production_ready : analysisData.production_ready)\r\n                ? 'System is ready for production deployment' \r\n                : 'System needs optimization before production deployment'}\r\n            </p>\r\n          </div>\r\n          <div className={`flex items-center space-x-2 ${(isDynamic ? finalAnalysis.production_ready : analysisData.production_ready) ? 'text-green-400' : 'text-orange-400'}`}>\r\n            {(isDynamic ? finalAnalysis.production_ready : analysisData.production_ready) ? (\r\n              <CheckCircle className=\"h-6 w-6\" />\r\n            ) : (\r\n              <Clock className=\"h-6 w-6\" />\r\n            )}\r\n            <span className=\"font-semibold\">\r\n              {(isDynamic ? finalAnalysis.production_ready : analysisData.production_ready) ? 'Ready' : 'Needs Work'}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </motion.div>\r\n\r\n      {/* Image Analysis Section */}\r\n      {ai_provider === 'openrouter' && (\r\n        <motion.div \r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.9 }}\r\n          className=\"card\"\r\n        >\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h3 className=\"text-lg font-semibold text-white\">Image Analysis</h3>\r\n            <button\r\n              onClick={() => setShowImageInput(!showImageInput)}\r\n              className=\"btn-secondary text-sm\"\r\n            >\r\n              {showImageInput ? 'Hide' : 'Add Image'}\r\n            </button>\r\n          </div>\r\n          \r\n          {showImageInput && (\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                  Image URL\r\n                </label>\r\n                <input\r\n                  type=\"url\"\r\n                  value={imageUrl}\r\n                  onChange={(e) => setImageUrl(e.target.value)}\r\n                  placeholder=\"https://example.com/image.jpg\"\r\n                  className=\"input-field w-full\"\r\n                />\r\n              </div>\r\n              <button\r\n                onClick={() => {\r\n                  // This would trigger a new analysis with the image\r\n                  console.log('Analyze with image:', imageUrl);\r\n                }}\r\n                className=\"btn-primary\"\r\n                disabled={!imageUrl}\r\n              >\r\n                <Image className=\"h-4 w-4 mr-2\" />\r\n                Analyze with Image\r\n              </button>\r\n            </div>\r\n          )}\r\n          \r\n          <p className=\"text-sm text-gray-400 mt-2\">\r\n            Add screenshots or charts to get enhanced AI analysis with visual context.\r\n          </p>\r\n        </motion.div>\r\n      )}\r\n\r\n      {/* Auto-Retry Information */}\r\n      {analysis.auto_retry && (\r\n        <motion.div \r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 1.0 }}\r\n          className=\"card\"\r\n        >\r\n          <div className=\"flex items-center space-x-3\">\r\n            <div className={`w-2 h-2 rounded-full ${analysis.auto_retry.triggered ? 'bg-green-400' : 'bg-gray-400'}`}></div>\r\n            <div>\r\n              <h3 className=\"font-semibold text-white\">Auto-Retry</h3>\r\n              <p className=\"text-sm text-gray-400\">\r\n                {analysis.auto_retry.triggered \r\n                  ? `New test initiated: ${analysis.auto_retry.new_test_id}`\r\n                  : analysis.auto_retry.reason || 'No retry recommended'}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AIAnalysis; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}